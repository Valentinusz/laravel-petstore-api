{
    "openapi": "3.0.0",
    "info": {
        "title": "PetShelter API",
        "version": "0.0"
    },
    "paths": {
        "/api/v1/adoptions": {
            "get": {
                "tags": [
                    "Adoption"
                ],
                "summary": "Get a page of adoptions",
                "operationId": "eb0fdc02fca4bc574b72713f2486a883",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PageOfAdoption",
                                    "required": [
                                        "data",
                                        "meta"
                                    ],
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Adoption"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PageMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Adoption"
                ],
                "summary": "Add a new adoption",
                "operationId": "createAdoption",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Adoption"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Pet is already adopted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/adoptions/{adoptionId}": {
            "get": {
                "tags": [
                    "Adoption"
                ],
                "summary": "Get the given pet",
                "operationId": "05e1df222f443097ff5b0f03437faaa1",
                "parameters": [
                    {
                        "name": "adoptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Adoption"
                ],
                "summary": "Update a pet",
                "operationId": "9d401ba88dfa6d84f2c403c31af11495",
                "responses": {
                    "200": {
                        "description": "Updated",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Adoption not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Adoption"
                ],
                "summary": "Delete an adoption",
                "operationId": "c8db9a2271e15e7a49446de23904996e",
                "parameters": [
                    {
                        "name": "adoptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Adoption deleted",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Adoption does not exist"
                    }
                }
            }
        },
        "/api/v1/animals": {
            "get": {
                "tags": [
                    "Animal"
                ],
                "summary": "Get all animals",
                "operationId": "0b709deff337cdadafc2fa4db0a789e8",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnimalSummaryCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Animal"
                ],
                "summary": "Add a new animal",
                "operationId": "e1cfcfb74160cc91b3fb818a01bc4064",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAnimalRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/animals/{animalId}": {
            "get": {
                "tags": [
                    "Animal"
                ],
                "summary": "Get the given animal",
                "operationId": "00f34883a902c29c9d83ee33656a0f81",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Animal"
                ],
                "summary": "Update the given animal",
                "operationId": "69c427bdd1acc1fb60b201062c3a0181",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Animal"
                ],
                "summary": "Delete the given animal",
                "operationId": "de9d1ae4f8e0bc7fd8d5f43810b899c2",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "409": {
                        "description": "Conflict - A pet exists for the animal type"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in",
                "description": "Handle an incoming authentication request.",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content",
                        "headers": {
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=0%3D; expires=Wed, 12 Feb 2025 21:56:44 GMT; Max-Age=7200; httponly; samesite=lax"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out",
                "description": "Destroy an authenticated session.",
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": "Session destroyed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "scalar": "laravel_session"
                    }
                ]
            }
        },
        "/api/v1/pets": {
            "get": {
                "tags": [
                    "Pet"
                ],
                "summary": "Get a page of pets",
                "operationId": "getPets",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PageOfPet",
                                    "required": [
                                        "data",
                                        "meta"
                                    ],
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Pet"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PageMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Pet"
                ],
                "summary": "Add a new pet",
                "operationId": "a931458cc75b6b424cc10814321b7bee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/pets/{petId}": {
            "get": {
                "tags": [
                    "Pet"
                ],
                "summary": "Get the given pet",
                "operationId": "fef695c3cc95448a6f63a12c9fde764d",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Pet"
                ],
                "summary": "Update a pet",
                "operationId": "f167d8510b70a59e918875e8eb16ce48",
                "responses": {
                    "200": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Pet"
                ],
                "summary": "Delete a pet",
                "operationId": "8f63027642006a17fdada5542d46fea6",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/v1/pets/{petId}/pet-pictures": {
            "post": {
                "tags": [
                    "PetPicture"
                ],
                "summary": "Get a page of pets",
                "operationId": "65a87f003891714ac6ea7129c1d02586",
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/api/v1/pet-pictures/{pictureId}": {
            "delete": {
                "tags": [
                    "PetPicture"
                ],
                "summary": "Get a page of pets",
                "operationId": "6f8b706e521df4d7072ccf0568724439",
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }
                }
            }
        },
        "/api/v1/users/current": {
            "get": {
                "operationId": "0aa8bbde535c6ae13c02368a9e42c52d",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PageMeta": {
                "required": [
                    "current_page",
                    "from",
                    "last_page",
                    "path",
                    "per_page",
                    "to",
                    "total"
                ],
                "properties": {
                    "current_page": {
                        "description": "Index of the current page. Indexed from 1.",
                        "type": "integer",
                        "example": 1
                    },
                    "from": {
                        "description": "Index of the first item of the page among all items. Equal to (page * per_page) + 1.",
                        "type": "integer",
                        "example": 6
                    },
                    "last_page": {
                        "description": "Index of the last page",
                        "type": "integer",
                        "example": 4
                    },
                    "path": {
                        "description": "URL of the current endpoint",
                        "type": "string",
                        "example": "http://127.0.0.1:8000/api/v1/pets"
                    },
                    "per_page": {
                        "description": "Page size",
                        "type": "string",
                        "example": 5
                    },
                    "to": {
                        "description": "Index of the last item of the page among all items. Equal to page * (per_page + 1).",
                        "type": "integer",
                        "example": 10
                    },
                    "total": {
                        "description": "Total count of items",
                        "type": "integer",
                        "example": 20
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "required": [],
                "properties": {}
            },
            "StoreAnimalRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Dog",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "UpdateAnimalRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Dog",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "LoginRequest",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "admin@laravelpetshelter.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "StorePetRequest": {
                "title": "StorePetRequest",
                "required": [
                    "name",
                    "animal",
                    "gender"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Max",
                        "nullable": false
                    },
                    "animal": {
                        "type": "string",
                        "example": "Cat",
                        "nullable": false
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": false
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "UpdatePetRequest": {
                "required": [
                    "name",
                    "is_male",
                    "birth_date",
                    "description",
                    "animal"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Maximus",
                        "nullable": false
                    },
                    "is_male": {
                        "type": "boolean",
                        "example": false,
                        "nullable": false
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": false
                    },
                    "description": {
                        "type": "string",
                        "example": "Best boy.",
                        "nullable": false
                    },
                    "animal": {
                        "type": "integer",
                        "example": 1,
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "Adoption": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "AdoptionCollection": {},
            "AnimalDetails": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Cat"
                    }
                },
                "type": "object"
            },
            "AnimalSummaryCollection": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnimalSummary"
                        }
                    }
                },
                "type": "object"
            },
            "AnimalSummary": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Cat"
                    }
                },
                "type": "object"
            },
            "Pet": {
                "required": [
                    "id",
                    "name",
                    "animal",
                    "gender",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Pet"
                    },
                    "animal": {
                        "$ref": "#/components/schemas/AnimalSummary"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "Male"
                    },
                    "description": {
                        "type": "string",
                        "example": "Very shy."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {}
                },
                "type": "object"
            },
            "UserSummary": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {}
                },
                "type": "object"
            }
        },
        "headers": {
            "Set-Cookie": {
                "schema": {
                    "type": "string",
                    "example": "laravel_session=0%3D; expires=Wed, 12 Feb 2025 21:56:44 GMT; Max-Age=7200; httponly; samesite=lax"
                }
            }
        },
        "securitySchemes": {
            "cookie": {
                "type": "apiKey",
                "name": "laravel_session",
                "in": "cookie"
            }
        }
    },
    "tags": [
        {
            "name": "Adoption"
        },
        {
            "name": "Animal"
        },
        {
            "name": "Authentication"
        },
        {
            "name": "Pet"
        },
        {
            "name": "PetPicture"
        }
    ]
}